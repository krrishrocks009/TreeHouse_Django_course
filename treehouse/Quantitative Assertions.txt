Quantitative Assertions:

setUp() - Method that is run before each test. Use this to set up state for the tests

assertEqual(x, y) - Make sure x and y are equal

assertNotEqual(x, y) - Make sure x and y are not equal

assertGreater(x, y) - Make sure x is greater than y

assertLess(x, y) - Make sure x is less than y

assertIn(x, y) - Make sure x is a member of y (this is like the in keyword)

assertIsInstance(x, y) - Make sure x is an instance of the y class

assertGreaterEqual(x, y) - Make sure x is greater than or equal to y

assertLessEqual(x, y) - Make sure x is less than or equal to y

assertRaises(x) - Make sure the following code raises the x exception

You can use @unittest.expectedFailure on tests that you know will fail

Example

with assertRaises(ValueError):
    int('a')

Using Coverage::

Installing coverage.py

pip install coverage

Using coverage.py

Make sure you test file can be run from the command line without the -m unittest argument.

coverage run tests.py

Generate a report

coverage report or coverage report -m if you want the missed lines.
 
HTML Reports - Coverage

coverage html will generate the HTML report. By default, it'll live in the htmlcov/ directory.

To serve HTML files (and CSS, JS, etc) directly from Python, we used the http.server module through python -m http.server.